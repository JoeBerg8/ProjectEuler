package problems;

/*
 * Even Fibonacci numbers
Problem 2
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

@author Joe Berg
 */

import java.util.ArrayList;
import java.util.List;

public class Euler2 {

	public static void main(String[] args) {
		int number = 33;
		int sum = 0;
		List<Integer> fiboList = new ArrayList<>();
		for (int i = 1; i <= number; i++) {
			fiboList.add(fibonacci(i));
		}
		System.out.println("Un-Summed Numbers: ");
		for (int i = 0; i < fiboList.size(); i++) {
			if (fiboList.get(i) % 2 == 0) {
				System.out.println(fiboList.get(i));
			}
		}
		System.out.println();
		System.out.println("Summed Numbers: ");
		for (int i = 0; i < fiboList.size(); i++) {
			if (fiboList.get(i) % 2 == 0) {
				sum = sum + fiboList.get(i);
				System.out.println(sum);
			}
		}
	}
	
	private static int fibonacci(int x) {
		if (x == 1 || x == 2) {
			return 1;
		}
		
		return fibonacci(x-1) + fibonacci(x-2);
	}
}